2.0 多api控制

3.0 增加 API 切换显示按钮
可以在 Translator 类的 create_widgets 方法中添加一个按钮，点击后可以切换当前使用的 API。
4.0如果输入框没有文本，则不进行翻译。在翻译完成后，可以添加一行代码来清空输入框中的文本
4.1优化api显示
5.0多线程
6.0api切换
7.0 在GUI界面中添加一个状态栏，用于显示当前翻译使用的API和翻译结果的状态（成功/失败）




建议添加一个语言选择器，允许用户选择翻译源语言。
建议添加一个历史记录功能，记录用户翻译的文本和结果，方便用户查找和复用。
建议添加一个翻译文本的保存功能，允许用户将翻译结果保存到本地文件中。
在remote_translate函数中，当API连接失败时，建议使用logging模块记录错误信息，以便更好地排查问题。
添加一个菜单栏，用于设置API优先级、切换翻译语言、清空输入输出框等操作。


